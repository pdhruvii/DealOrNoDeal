# Dhruvi Patel
# DEAL OR NO DEAL
# Allows you to use turtle and time aspects in the game.
import turtle
import time

t = turtle.Turtle()
# The speed of the turtle drawing is set to 0 so the graphics go fast.
# The following drawing is the starting screen design. It prints "DEAL OR NO DEAL".
t.speed(0)
canvas = turtle.Screen()
canvas.bgcolor("yellow")

t.begin_fill()
t.color("black")
t.penup()
t.setpos(-500, 300)
t.pendown()
t.forward(1000)
t.right(90)
t.forward(600)
t.right(90)
t.forward(1000)
t.right(90)
t.forward(600)
t.right(90)
t.end_fill()

t.begin_fill()
t.color("orange")
t.penup()
t.setpos(-475, 275)
t.pendown()
t.forward(950)
t.right(90)
t.forward(550)
t.right(90)
t.forward(950)
t.right(90)
t.forward(550)
t.right(90)
t.end_fill()

t.begin_fill()
t.color("black")
t.penup()
t.setpos(-500, 300)
t.pendown()
t.forward(1000)
t.right(90)
t.forward(300)
t.right(90)
t.forward(1000)
t.right(90)
t.forward(300)
t.right(90)
t.end_fill()

t.begin_fill()
t.color("gold")
t.penup()
t.setpos(-475, 275)
t.pendown()
t.forward(950)
t.right(90)
t.forward(250)
t.right(90)
t.forward(950)
t.right(90)
t.forward(250)
t.right(90)
t.end_fill()

t.begin_fill()
t.color("black")
t.penup()
t.setpos(-450, -25)
t.pendown()
t.forward(900)
t.right(90)
t.forward(225)
t.right(90)
t.forward(900)
t.right(90)
t.forward(225)
t.right(90)
t.end_fill()

t.penup()
t.setpos(-400, 45)
t.color("black")
t.pendown()
t.write("DEAL OR", font=('Britannic Bold', 150))

t.penup()
t.setpos(-375, -250)
t.color("gold")
t.pendown()
t.write("NO DEAL", font=('Britannic Bold', 150))
time.sleep(2)
# The screen is resetted after 2 seconds, removing the title of the game.
t.reset()
# Import random allows you to randomize values when a range is given.
import random

# The following variables are defined as constants with a value of 0.
bankOffer1 = 0
bankOffer2 = 0
bankOffer3 = 0
bankOffer4 = 0
bankOffer5 = 0
bankOffer6 = 0
round2 = 0
round3 = 0
round4 = 0
round5 = 0
round6 = 0
# Strings inside print statements are used to display the instructions.
print("WELCOME TO DEAL OR NO DEAL!")
print("INSTRUCTIONS:")
print("You will be given 26 cases. Each case will have a different amount of money.")
print(
    "In the start of the game, you will get to choose something called a Venus Case. Throughout the game, you will be able to enter cases you want to open.")
print(
    "After every few cases are opened, the bank will offer you a deal. Your goal is to get the highest deal for your Venus Case.")
print(
    "You want to try to ensure that you are guessing cases with the least amount of money, so the Venus Case has the highest amount.")
print(
    "The bank will try to assume the value of the Venus Case, and give you frequent offers. You want to sell your Venus Case to them for the highest deal.")
print("If you don't want to accept the deal, you need to assume that your Venus case is the highest possible value.")
print(
    "If you want to accept the deal, you say Deal. If not, you say No Deal. The value of the Venus Case will be revealed once you make a deal, or at the end of the game.")
print("Good luck. You got this!")
print("")
# The final decision variable is also set to 0.
finalDecision = 0
# The case ranges are given (1-26).
# Also, 26 different money values are given, which will each be assigned to a case later on.
cases = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]
caseValues = [.01, 1, 5, 10, 25, 50, 75, 100, 200, 300, 400, 500, 750, 1000, 5000, 10000, 25000, 50000, 75000, 100000,
              200000, 300000, 400000, 500000, 750000, 1000000]
# A venus case is asked for.
venusCase = int(input(
    "Please choose a Venus case from the range 1 - 26. This case will be opened when you make a deal, or at the end of the game: "))
# A while loop is started to ensure that only a case in the range is chosen as the venus case, and that no error is caused by entering something else.
while venusCase not in cases:
    # Every time a user enters something outside the case range, a screen display will come up saying "Invalid Input."
    # After the graphics are gone, the user will be able to input a number again.
    # The user will be asked to input a number repeatedly until unless it is in the case range.
    print("You did not enter anything valid.")
    t.speed(0)
    canvas = turtle.Screen()
    canvas.bgcolor("yellow")
    t.begin_fill()
    t.color("black")
    t.penup()
    t.setpos(-500, 300)
    t.pendown()
    t.forward(1000)
    t.right(90)
    t.forward(600)
    t.right(90)
    t.forward(1000)
    t.right(90)
    t.forward(600)
    t.right(90)
    t.end_fill()

    t.begin_fill()
    t.color("orange")
    t.penup()
    t.setpos(-475, 275)
    t.pendown()
    t.forward(950)
    t.right(90)
    t.forward(550)
    t.right(90)
    t.forward(950)
    t.right(90)
    t.forward(550)
    t.right(90)
    t.end_fill()

    t.begin_fill()
    t.color("black")
    t.penup()
    t.setpos(-500, 300)
    t.pendown()
    t.forward(1000)
    t.right(90)
    t.forward(300)
    t.right(90)
    t.forward(1000)
    t.right(90)
    t.forward(300)
    t.right(90)
    t.end_fill()

    t.begin_fill()
    t.color("gold")
    t.penup()
    t.setpos(-475, 275)
    t.pendown()
    t.forward(950)
    t.right(90)
    t.forward(250)
    t.right(90)
    t.forward(950)
    t.right(90)
    t.forward(250)
    t.right(90)
    t.end_fill()

    t.begin_fill()
    t.color("black")
    t.penup()
    t.setpos(-450, -25)
    t.pendown()
    t.forward(900)
    t.right(90)
    t.forward(225)
    t.right(90)
    t.forward(900)
    t.right(90)
    t.forward(225)
    t.right(90)
    t.end_fill()

    t.penup()
    t.setpos(-350, 45)
    t.color("black")
    t.pendown()
    t.write("INVALID", font=('Britannic Bold', 150))

    t.penup()
    t.setpos(-275, -250)
    t.color("gold")
    t.pendown()
    t.write("INPUT.", font=('Britannic Bold', 150))
    time.sleep(2)
    t.reset()
    print("")
    venusCase = int(input(
        "Please choose a Venus case from the range 1 - 26. This case will be opened when you make a deal, or at the end of the game: "))
# Once the Venus case is chosen, the amount of money it holds will be assigned randomly with the help of the caseValues range given above.
venusCaseMoney = random.choice(caseValues)
# Both the Venus case will be removed, and the amount of money it has will be removed from the ranges: cases and caseValues.
cases.remove(venusCase)
caseValues.remove(venusCaseMoney)
print("")


# The first def function (message1) is started.
def message1(bankOffer1, totalValue):
    # A large if statement is calling the total value. Based on the range of the total value, is how the bank offers are given.
    if totalValue > 0 and totalValue <= 50000:
        # A range of random offers is given, which are quite approximate to one another but help avoid repetition.
        offerChoices = [85000, 86002, 86254, 87953, 89953, 90010, 94635, 97229, 100000, 100422, 115605, 124500, 1250000,
                        127897, 128000, 130000, 135045, 140000, 146723]
        # A bank offer is randomly chosen.
        bankOffer1 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer1)
        # The user is asked to make a decision. They are asked to make a deal or no deal with the bank.
        decision1 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        # An if statement is started. If the user says deal, they are awarded the bank offer, yet revealing the value of the Venus case.
        if decision1 == "deal" or decision1 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer1)
            # The program is ended after deal option is choosed.
            exit()
        # If the user enters no deal, the game moves on to round 2, and the user is asked for more cases.
        elif decision1 == "No Deal" or decision1 == "No deal" or decision1 == "no Deal" or decision1 == "no deal":
            print("You will be able to choose 6 more cases next round.")
            message2(round2, totalValue, cases)
        # If something else is inputted, turtle will start an "invalid input" screen display. It will repeat this message until the user enters either deal or no deal.
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message1(bankOffer1, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 2.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 50000 and totalValue <= 100000:
        offerChoices = [75000, 75502, 76254, 77809, 78000, 78100, 78265, 78564, 79210, 79050, 79500, 79862, 80000,
                        81000, 81526, 82400, 82645, 82954, 83000, 83250, 83466, 83889, 8400, 84500, 85000]
        bankOffer1 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer1)
        decision1 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision1 == "deal" or decision1 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("YOU HAVE WON: $", bankOffer1)
            exit()
        elif decision1 == "No Deal" or decision1 == "No deal" or decision1 == "no Deal" or decision1 == "no deal":
            print("You will be able to choose 6 more cases next round.")
            message2(round2, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message1(bankOffer1, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 2.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 100000 and totalValue <= 300000:
        offerChoices = [70000, 70520, 71000, 71064, 71555, 71984, 72000, 72155, 72118, 72600, 73000, 73102, 73465,
                        73849, 74000, 74100, 74820, 74993, 75000]
        bankOffer1 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer1)
        decision1 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision1 == "deal" or decision1 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("YOU HAVE WON: $", bankOffer1)
            exit()
        elif decision1 == "No Deal" or decision1 == "No deal" or decision1 == "no Deal" or decision1 == "no deal":
            print("You will be able to choose 6 more cases next round.")
            message2(round2, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message1(bankOffer1, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 2.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 300000 and totalValue <= 500000:
        offerChoices = [65000, 60321, 60500, 61200, 61289, 61500, 62150, 62480, 62987, 63000, 63010, 63100, 63560,
                        63975, 64005, 64230, 64550, 64982, 64660, 64980, 65000]
        bankOffer1 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer1)
        decision1 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision1 == "deal" or decision1 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("YOU HAVE WON: $", bankOffer1)
            exit()
        elif decision1 == "No Deal" or decision1 == "No deal" or decision1 == "no Deal" or decision1 == "no deal":
            print("You will be able to choose 6 more cases next round.")
            message2(round2, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message1(bankOffer1, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 2.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 500000 and totalValue <= 750000:
        offerChoices = [60000, 60050, 60120, 61000, 61500, 61780, 61995, 62000, 62108, 62433, 62500, 62780, 62905,
                        63000, 63100, 63150, 63200, 63255, 63300, 63500, 63894, 64018, 64570, 64808, 65000]
        bankOffer1 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer1)
        decision1 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision1 == "deal" or decision1 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("YOU HAVE WON: $", bankOffer1)
            exit()
        elif decision1 == "No Deal" or decision1 == "No deal" or decision1 == "no Deal" or decision1 == "no deal":
            print("You will be able to choose 6 more cases next round.")
            message2(round2, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message1(bankOffer1, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 2.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 750000 and totalValue <= 1000000:
        offerChoices = [55000, 55100, 55750, 55859, 56000, 56121, 56250, 56500, 56758, 57002, 57303, 57500, 57570,
                        57750, 58000, 58250, 58302, 58455, 58600, 58909, 59000, 59500, 59741, 60000]
        bankOffer1 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer1)
        decision1 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision1 == "deal" or decision1 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("YOU HAVE WON: $", bankOffer1)
            exit()
        elif decision1 == "No Deal" or decision1 == "No deal" or decision1 == "no Deal" or decision1 == "no deal":
            print("You will be able to choose 6 more cases next round.")
            message2(round2, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message1(bankOffer1, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 2.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 1000000 and totalValue <= 1500000:
        offerChoices = [50000, 50500, 51075, 51500, 51750, 52000, 52160, 52480, 52700, 53000, 53101, 53265, 53458,
                        53750, 53981, 54000, 54001, 54100, 54567, 54983, 55000]
        bankOffer1 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer1)
        decision1 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision1 == "deal" or decision1 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("YOU HAVE WON: $", bankOffer1)
            exit()
        elif decision1 == "No Deal" or decision1 == "No deal" or decision1 == "no Deal" or decision1 == "no deal":
            print("You will be able to choose 6 more cases next round.")
            message2(round2, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message1(bankOffer1, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 2.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 1500000 and totalValue <= 2000000:
        offerChoices = [45000, 45500, 45752, 45895, 46000, 46100, 46203, 46544, 46789, 47000, 47500, 47855, 48000,
                        48120, 48370, 48510, 48750, 49000, 49200, 49601, 50000]
        bankOffer1 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer1)
        decision1 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision1 == "deal" or decision1 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("YOU HAVE WON: $", bankOffer1)
            exit()
        elif decision1 == "No Deal" or decision1 == "No deal" or decision1 == "no Deal" or decision1 == "no deal":
            print("You will be able to choose 6 more cases next round.")
            message2(round2, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message1(bankOffer1, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 2.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 2000000 and totalValue <= 2500000:
        offerChoices = [35000, 35100, 36250, 36500, 36750, 37000, 37101, 37420, 37750, 38000, 38550, 38965, 38990,
                        39000, 39500, 41000, 41503, 41659, 42879, 42998, 43000, 43052, 43600, 44500, 44758, 45000]
        bankOffer1 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer1)
        decision1 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision1 == "deal" or decision1 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("YOU HAVE WON: $", bankOffer1)
            exit()
        elif decision1 == "No Deal" or decision1 == "No deal" or decision1 == "no Deal" or decision1 == "no deal":
            print("You will be able to choose 6 more cases next round.")
            message2(round2, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message1(bankOffer1, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 2.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 2500000 and totalValue <= 3000000:
        offerChoices = [15000, 15100, 15150, 16000, 16500, 16684, 17789, 18000, 19123, 19150, 19605, 19909, 20400,
                        21540, 21750, 22000, 22135, 22560, 23000, 23750, 24120, 24325, 24500, 24780, 25000]
        bankOffer1 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer1)
        decision1 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision1 == "deal" or decision1 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("YOU HAVE WON: $", bankOffer1)
            exit()
        elif decision1 == "No Deal" or decision1 == "No deal" or decision1 == "no Deal" or decision1 == "no deal":
            print("You will be able to choose 6 more cases next round.")
            message2(round2, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message1(bankOffer1, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 2.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    else:
        offerChoices = [10000, 11100, 11500, 12000, 12324, 12650, 12980, 13000, 13012, 13180, 13345, 13450, 13500,
                        13896, 13900, 14000, 14103, 14200, 14500, 14650, 14899, 15000]
        bankOffer1 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer1)
        decision1 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision1 == "deal" or decision1 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("YOU HAVE WON: $", bankOffer1)
            exit()
        elif decision1 == "No Deal" or decision1 == "No deal" or decision1 == "no Deal" or decision1 == "no deal":
            print("You will be able to choose 6 more cases next round.")
            message2(round2, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message1(bankOffer1, totalValue)


# If the user inputs were all valid, and the user didn't accept the deal, the game moved on to round 2.
# The second def function started round 2.
def message2(round2, totalValue, cases):
    for i in range(1, 7):
        # A for loop gives a range of 6 cases.
        # A boolean value is set.
        true = True
        # The user is asked to enter a case. The while loop asks for valid inputs until 6 cases in the range are successfully chosen.
        ab = int(input("Please enter a case number: "))
        while ab not in cases:
            print("You did not enter anything valid.")
            # If the value is not valid, turtle will start a screen display saying "invalid input.".
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
            print("")
            print("These are the cases that are yet to be opened:", cases)
            ab = int(input("Please enter a case number: "))
        # After a case in the range in [cases] is chosen, it is assigned a random value. It is showned to the user. Then both the case and its money value are removed from their ranges.
        abc = random.choice(caseValues)
        print("")
        print("You opened: $", abc)
        totalValue = abc + totalValue
        caseValues.remove(abc)
        cases.remove(ab)
        print("From the cases you have opened, this is the sum of money already revealed:", totalValue)
        print("These are the cases that are yet to be opened:", cases)
        print("")
    # This message runs until 6 valid inputs are given.
    # Then it goes into mmessage 3.
    message3(bankOffer2, totalValue)


# Another def function is started, giving another a set of ranges which determine the banker's offer after the 6 cases were chosen.
# The values are determined based on the total value of the money released uptil now.
def message3(bankOffer2, totalValue):
    if totalValue > 0 and totalValue <= 50000:
        # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
        # Deal leads to ending of game and accepting of bank offer.
        # No deal leads to the starting of round 3.
        # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
        offerChoices = [85000, 86002, 86254, 87953, 89953, 90010, 94635, 97229, 100000, 100422, 115605, 124500, 1250000,
                        127897, 128000, 130000, 135045, 140000, 146723]
        bankOffer2 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer2)
        decision2 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision2 == "deal" or decision2 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer2)
            exit()
        elif decision2 == "No Deal" or decision2 == "No deal" or decision2 == "no Deal" or decision2 == "no deal":
            print("You will be able to choose 4 more cases next round.")
            message4(round3, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message3(bankOffer2, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 3.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 50000 and totalValue <= 100000:
        offerChoices = [75000, 75502, 76254, 77809, 78000, 78100, 78265, 78564, 79210, 79050, 79500, 79862, 80000,
                        81000, 81526, 82400, 82645, 82954, 83000, 83250, 83466, 83889, 8400, 84500, 85000]
        bankOffer2 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer2)
        decision2 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision2 == "deal" or decision2 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer2)
            exit()
        elif decision2 == "No Deal" or decision2 == "No deal" or decision2 == "no Deal" or decision2 == "no deal":
            print("You will be able to choose 4 more cases next round.")
            message4(round3, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message3(bankOffer2, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 3.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 100000 and totalValue <= 300000:
        offerChoices = [70000, 70520, 71000, 71064, 71555, 71984, 72000, 72155, 72118, 72600, 73000, 73102, 73465,
                        73849, 74000, 74100, 74820, 74993, 75000]
        bankOffer2 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer2)
        decision2 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision2 == "deal" or decision2 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer2)
            exit()
        elif decision2 == "No Deal" or decision2 == "No deal" or decision2 == "no Deal" or decision2 == "no deal":
            print("You will be able to choose 4 more cases next round.")
            message4(round3, totalValue, cases)

        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message3(bankOffer2, totalValue)
        # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 3.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 300000 and totalValue <= 500000:
        offerChoices = [65000, 60321, 60500, 61200, 61289, 61500, 62150, 62480, 62987, 63000, 63010, 63100, 63560,
                        63975, 64005, 64230, 64550, 64982, 64660, 64980, 65000]
        bankOffer2 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer2)
        decision2 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision2 == "deal" or decision2 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer2)
            exit()
        elif decision2 == "No Deal" or decision2 == "No deal" or decision2 == "no Deal" or decision2 == "no deal":
            print("You will be able to choose 4 more cases next round.")
            message4(round3, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message3(bankOffer2, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 3.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 500000 and totalValue <= 750000:
        offerChoices = [60000, 60050, 60120, 61000, 61500, 61780, 61995, 62000, 62108, 62433, 62500, 62780, 62905,
                        63000, 63100, 63150, 63200, 63255, 63300, 63500, 63894, 64018, 64570, 64808, 65000]
        bankOffer2 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer2)
        decision2 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision2 == "deal" or decision2 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer2)
            exit()
        elif decision2 == "No Deal" or decision2 == "No deal" or decision2 == "no Deal" or decision2 == "no deal":
            print("You will be able to choose 4 more cases next round.")
            message4(round3, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message3(bankOffer2, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 3.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 750000 and totalValue <= 1000000:
        offerChoices = [55000, 55100, 55750, 55859, 56000, 56121, 56250, 56500, 56758, 57002, 57303, 57500, 57570,
                        57750, 58000, 58250, 58302, 58455, 58600, 58909, 59000, 59500, 59741, 60000]
        bankOffer2 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer2)
        decision2 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision2 == "deal" or decision2 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer2)
            exit()
        elif decision2 == "No Deal" or decision2 == "No deal" or decision2 == "no Deal" or decision2 == "no deal":
            print("You will be able to choose 4 more cases next round.")
            message4(round3, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message3(bankOffer2, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 3.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 1000000 and totalValue <= 1500000:
        offerChoices = [50000, 50500, 51075, 51500, 51750, 52000, 52160, 52480, 52700, 53000, 53101, 53265, 53458,
                        53750, 53981, 54000, 54001, 54100, 54567, 54983, 55000]
        bankOffer2 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer2)
        decision2 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision2 == "deal" or decision2 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer2)
            exit()
        elif decision2 == "No Deal" or decision2 == "No deal" or decision2 == "no Deal" or decision2 == "no deal":
            print("You will be able to choose 4 more cases next round.")
            message4(round3, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message3(bankOffer2, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 3.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 1500000 and totalValue <= 2000000:
        offerChoices = [45000, 45500, 45752, 45895, 46000, 46100, 46203, 46544, 46789, 47000, 47500, 47855, 48000,
                        48120, 48370, 48510, 48750, 49000, 49200, 49601, 50000]
        bankOffer2 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer2)
        decision2 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision2 == "deal" or decision2 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer2)
            exit()
        elif decision2 == "No Deal" or decision2 == "No deal" or decision2 == "no Deal" or decision2 == "no deal":
            print("You will be able to choose 4 more cases next round.")
            message4(round3, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message3(bankOffer2, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 3.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 2000000 and totalValue <= 2500000:
        offerChoices = [35000, 35100, 36250, 36500, 36750, 37000, 37101, 37420, 37750, 38000, 38550, 38965, 38990,
                        39000, 39500, 41000, 41503, 41659, 42879, 42998, 43000, 43052, 43600, 44500, 44758, 45000]
        bankOffer2 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer2)
        decision2 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision2 == "deal" or decision2 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer2)
            exit()
        elif decision2 == "No Deal" or decision2 == "No deal" or decision2 == "no Deal" or decision2 == "no deal":
            print("You will be able to choose 4 more cases next round.")
            message4(round3, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message3(bankOffer2, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 3.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 2500000 and totalValue <= 3000000:
        offerChoices = [15000, 15100, 15150, 16000, 16500, 16684, 17789, 18000, 19123, 19150, 19605, 19909, 20400,
                        21540, 21750, 22000, 22135, 22560, 23000, 23750, 24120, 24325, 24500, 24780, 25000]
        bankOffer2 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer2)
        decision2 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision2 == "deal" or decision2 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer2)
            exit()
        elif decision2 == "No Deal" or decision2 == "No deal" or decision2 == "no Deal" or decision2 == "no deal":
            print("You will be able to choose 4 more cases next round.")
            message4(round3, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message3(bankOffer2, totalValue)
        # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 3.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    else:
        offerChoices = [10000, 11100, 11500, 12000, 12324, 12650, 12980, 13000, 13012, 13180, 13345, 13450, 13500,
                        13896, 13900, 14000, 14103, 14200, 14500, 14650, 14899, 15000]
        bankOffer2 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer2)
        decision2 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision2 == "deal" or decision2 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer2)
            exit()
        elif decision2 == "No Deal" or decision2 == "No deal" or decision2 == "no Deal" or decision2 == "no deal":
            print("You will be able to choose 4 more cases next round.")
            message4(round3, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
        # Deal leads to ending of game and accepting of bank offer.
        # No deal leads to the starting of round 3.
        # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
        message3(bankOffer2, totalValue)


# Round 3 is started after 6 successful inputs.
# This new def function starts round 3.
def message4(round3, totalValue, cases):
    # A for loop range is given. The program will ask for 4 case inputs.
    for i in range(1, 5):
        # A boolean value is set.
        true = True
        # A case is asked for.
        ab = int(input("Please enter a case number: "))
        # A while loop is started to ensure that the programs continues asking for case numbers if they are outside the range.
        # Simultaneously, the turtle draws a screen design which says "invalid input".
        while ab not in cases:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
            print("")
            print("These are the cases that are yet to be opened:", cases)
            ab = int(input("Please enter a case number: "))
        # Once a valid case number is entered, it is assigned to a random money value through the case values range.
        abc = random.choice(caseValues)
        print("")
        print("You opened: $", abc)
        # The total value of the values revealed so far are added up (help in the determining of bank offers).
        totalValue = abc + totalValue
        # Once the case and its value is shown to the user, they both are removed from their ranges.
        caseValues.remove(abc)
        cases.remove(ab)
        print("From the cases you have opened, this is the sum of money already revealed:", totalValue)
        print("These are the cases that are yet to be opened:", cases)
        print("")
    # The next message is executed after 4 successful input.
    message5(bankOffer3, totalValue)


# Another def function is started. It is intended to give a 3rd bank offer as the user didn't accept the previous 2.
def message5(bankOffer3, totalValue):
    if totalValue > 0 and totalValue <= 50000:
        offerChoices = [85000, 86002, 86254, 87953, 89953, 90010, 94635, 97229, 100000, 100422, 115605, 124500, 1250000,
                        127897, 128000, 130000, 135045, 140000, 146723]
        bankOffer3 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer3)
        decision3 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision3 == "deal" or decision3 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer3)
            exit()
        elif decision3 == "No Deal" or decision3 == "No deal" or decision3 == "no Deal" or decision3 == "no deal":
            print("You will be able to choose 3 more cases next round.")
            message6(round4, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message5(bankOffer3, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 4.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 50000 and totalValue <= 100000:
        offerChoices = [75000, 75502, 76254, 77809, 78000, 78100, 78265, 78564, 79210, 79050, 79500, 79862, 80000,
                        81000, 81526, 82400, 82645, 82954, 83000, 83250, 83466, 83889, 8400, 84500, 85000]
        bankOffer3 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer3)
        decision3 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision3 == "deal" or decision3 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer3)
            exit()
        elif decision3 == "No Deal" or decision3 == "No deal" or decision3 == "no Deal" or decision3 == "no deal":
            print("You will be able to choose 3 more cases next round.")
            message6(round4, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message5(bankOffer3, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 4.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 100000 and totalValue <= 300000:
        offerChoices = [70000, 70520, 71000, 71064, 71555, 71984, 72000, 72155, 72118, 72600, 73000, 73102, 73465,
                        73849, 74000, 74100, 74820, 74993, 75000]
        bankOffer3 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer3)
        decision3 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision3 == "deal" or decision3 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer3)
            exit()
        elif decision3 == "No Deal" or decision3 == "No deal" or decision3 == "no Deal" or decision3 == "no deal":
            print("You will be able to choose 3 more cases next round.")
            message6(round4, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message5(bankOffer3, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 4.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 300000 and totalValue <= 500000:
        offerChoices = [65000, 60321, 60500, 61200, 61289, 61500, 62150, 62480, 62987, 63000, 63010, 63100, 63560,
                        63975, 64005, 64230, 64550, 64982, 64660, 64980, 65000]
        bankOffer3 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer3)
        decision3 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision3 == "deal" or decision3 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer3)
            exit()
        elif decision3 == "No Deal" or decision3 == "No deal" or decision3 == "no Deal" or decision3 == "no deal":
            print("You will be able to choose 3 more cases next round.")
            message6(round4, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message5(bankOffer3, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 4.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 500000 and totalValue <= 750000:
        offerChoices = [60000, 60050, 60120, 61000, 61500, 61780, 61995, 62000, 62108, 62433, 62500, 62780, 62905,
                        63000, 63100, 63150, 63200, 63255, 63300, 63500, 63894, 64018, 64570, 64808, 65000]
        bankOffer3 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer3)
        decision2 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision3 == "deal" or decision3 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer3)
            exit()
        elif decision3 == "No Deal" or decision3 == "No deal" or decision3 == "no Deal" or decision3 == "no deal":
            print("You will be able to choose 3 more cases next round.")
            message6(round4, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message5(bankOffer3, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 4.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 750000 and totalValue <= 1000000:
        offerChoices = [55000, 55100, 55750, 55859, 56000, 56121, 56250, 56500, 56758, 57002, 57303, 57500, 57570,
                        57750, 58000, 58250, 58302, 58455, 58600, 58909, 59000, 59500, 59741, 60000]
        bankOffer3 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer3)
        decision3 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision3 == "deal" or decision3 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer3)
            exit()
        elif decision3 == "No Deal" or decision3 == "No deal" or decision3 == "no Deal" or decision3 == "no deal":
            print("You will be able to choose 3 more cases next round.")
            message6(round4, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message5(bankOffer3, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 4.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 1000000 and totalValue <= 1500000:
        offerChoices = [50000, 50500, 51075, 51500, 51750, 52000, 52160, 52480, 52700, 53000, 53101, 53265, 53458,
                        53750, 53981, 54000, 54001, 54100, 54567, 54983, 55000]
        bankOffer3 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer3)
        decision3 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision3 == "deal" or decision3 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer3)
            exit()
        elif decision3 == "No Deal" or decision3 == "No deal" or decision3 == "no Deal" or decision3 == "no deal":
            print("You will be able to choose 3 more cases next round.")
            message6(round4, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message5(bankOffer3, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 4.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 1500000 and totalValue <= 2000000:
        offerChoices = [45000, 45500, 45752, 45895, 46000, 46100, 46203, 46544, 46789, 47000, 47500, 47855, 48000,
                        48120, 48370, 48510, 48750, 49000, 49200, 49601, 50000]
        bankOffer3 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer3)
        decision3 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision3 == "deal" or decision3 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer3)
            exit()
        elif decision3 == "No Deal" or decision3 == "No deal" or decision3 == "no Deal" or decision3 == "no deal":
            print("You will be able to choose 3 more cases next round.")
            message6(round4, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message5(bankOffer3, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 4.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 2000000 and totalValue <= 2500000:
        offerChoices = [35000, 35100, 36250, 36500, 36750, 37000, 37101, 37420, 37750, 38000, 38550, 38965, 38990,
                        39000, 39500, 41000, 41503, 41659, 42879, 42998, 43000, 43052, 43600, 44500, 44758, 45000]
        bankOffer3 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer3)
        decision3 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision3 == "deal" or decision3 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer3)
            exit()
        elif decision3 == "No Deal" or decision3 == "No deal" or decision3 == "no Deal" or decision3 == "no deal":
            print("You will be able to choose 3 more cases next round.")
            message6(round4, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message5(bankOffer3, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 4.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 2500000 and totalValue <= 3000000:
        offerChoices = [15000, 15100, 15150, 16000, 16500, 16684, 17789, 18000, 19123, 19150, 19605, 19909, 20400,
                        21540, 21750, 22000, 22135, 22560, 23000, 23750, 24120, 24325, 24500, 24780, 25000]
        bankOffer3 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer3)
        decision3 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision3 == "deal" or decision3 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer3)
            exit()
        elif decision3 == "No Deal" or decision3 == "No deal" or decision3 == "no Deal" or decision3 == "no deal":
            print("You will be able to choose 3 more cases next round.")
            message6(round4, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message5(bankOffer3, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 4.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    else:
        offerChoices = [10000, 11100, 11500, 12000, 12324, 12650, 12980, 13000, 13012, 13180, 13345, 13450, 13500,
                        13896, 13900, 14000, 14103, 14200, 14500, 14650, 14899, 15000]
        bankOffer3 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer3)
        decision3 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision3 == "deal" or decision3 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer3)
        elif decision3 == "No Deal" or decision3 == "No deal" or decision3 == "no Deal" or decision3 == "no deal":
            print("You will be able to choose 3 more cases next round.")
            message6(round4, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
        # Deal leads to ending of game and accepting of bank offer.
        # No deal leads to the starting of round 4.
        # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
        message5(bankOffer3, totalValue)


# Another def function is started in order to start round 4. This message is started because the user did not accept the previous bank offers.
def message6(round4, totalValue, cases):
    # A for loop is started. It asks for 3 case inputs.
    for i in range(1, 4):
        # A boolean value is set.
        true = True
        # A while loops is started to ensure that the program asks for case inputs until 3 successful ones are given.
        # Simultaneously, turtle draws a screen design saying "invalid input".
        ab = int(input("Please enter a case number: "))
        while ab not in cases:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
            print("")
            print("These are the cases that are yet to be opened:", cases)
            ab = int(input("Please enter a case number: "))
        # Once a successful case input is given, it is assigned to a random money value through the help of the case values range.
        abc = random.choice(caseValues)
        print("")
        print("You opened: $", abc)
        # Once the case and its value is shown to the user, the case and its value are removed from their ranges.
        totalValue = abc + totalValue
        caseValues.remove(abc)
        cases.remove(ab)
        print("From the cases you have opened, this is the sum of money already revealed:", totalValue)
        print("These are the cases that are yet to be opened:", cases)
        print("")
    # The next message is executed once there are 3 valid inputs when cases are asked to be chosen from the range.
    message7(bankOffer4, totalValue)


# Another def function is started. It is started as the user did not previously accept the offers.
def message7(bankOffer4, totalValue):
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 5.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    if totalValue > 0 and totalValue <= 50000:
        offerChoices = [85000, 86002, 86254, 87953, 89953, 90010, 94635, 97229, 100000, 100422, 115605, 124500, 1250000,
                        127897, 128000, 130000, 135045, 140000, 146723]
        bankOffer4 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer4)
        decision4 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision4 == "deal" or decision4 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer4)
            exit()
        elif decision4 == "No Deal" or decision4 == "No deal" or decision4 == "no Deal" or decision4 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message8(round5, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message7(bankOffer4, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 5.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 50000 and totalValue <= 100000:
        offerChoices = [75000, 75502, 76254, 77809, 78000, 78100, 78265, 78564, 79210, 79050, 79500, 79862, 80000,
                        81000, 81526, 82400, 82645, 82954, 83000, 83250, 83466, 83889, 8400, 84500, 85000]
        bankOffer4 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer4)
        decision4 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision4 == "deal" or decision4 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer4)
            exit()
        elif decision4 == "No Deal" or decision4 == "No deal" or decision4 == "no Deal" or decision4 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message8(round5, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message7(bankOffer4, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 5.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 100000 and totalValue <= 300000:
        offerChoices = [70000, 70520, 71000, 71064, 71555, 71984, 72000, 72155, 72118, 72600, 73000, 73102, 73465,
                        73849, 74000, 74100, 74820, 74993, 75000]
        bankOffer4 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer4)
        decision4 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision4 == "deal" or decision4 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer4)
            exit()
        elif decision4 == "No Deal" or decision4 == "No deal" or decision4 == "no Deal" or decision4 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message8(round5, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message7(bankOffer4, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 5.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 300000 and totalValue <= 500000:
        offerChoices = [65000, 60321, 60500, 61200, 61289, 61500, 62150, 62480, 62987, 63000, 63010, 63100, 63560,
                        63975, 64005, 64230, 64550, 64982, 64660, 64980, 65000]
        bankOffer4 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer4)
        decision4 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision4 == "deal" or decision4 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer4)
            exit()
        elif decision4 == "No Deal" or decision4 == "No deal" or decision4 == "no Deal" or decision4 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message8(round5, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message7(bankOffer4, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 5.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 500000 and totalValue <= 750000:
        offerChoices = [60000, 60050, 60120, 61000, 61500, 61780, 61995, 62000, 62108, 62433, 62500, 62780, 62905,
                        63000, 63100, 63150, 63200, 63255, 63300, 63500, 63894, 64018, 64570, 64808, 65000]
        bankOffer4 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer4)
        decision4 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision4 == "deal" or decision4 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer4)
            exit()
        elif decision4 == "No Deal" or decision4 == "No deal" or decision4 == "no Deal" or decision4 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message8(round5, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message7(bankOffer4, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 5.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 750000 and totalValue <= 1000000:
        offerChoices = [55000, 55100, 55750, 55859, 56000, 56121, 56250, 56500, 56758, 57002, 57303, 57500, 57570,
                        57750, 58000, 58250, 58302, 58455, 58600, 58909, 59000, 59500, 59741, 60000]
        bankOffer4 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer4)
        decision4 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision4 == "deal" or decision4 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer4)
            exit()
        elif decision4 == "No Deal" or decision4 == "No deal" or decision4 == "no Deal" or decision4 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message8(round5, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message7(bankOffer4, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 5.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 1000000 and totalValue <= 1500000:
        offerChoices = [50000, 50500, 51075, 51500, 51750, 52000, 52160, 52480, 52700, 53000, 53101, 53265, 53458,
                        53750, 53981, 54000, 54001, 54100, 54567, 54983, 55000]
        bankOffer4 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer4)
        decision4 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision4 == "deal" or decision4 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer4)
            exit()
        elif decision4 == "No Deal" or decision4 == "No deal" or decision4 == "no Deal" or decision4 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message8(round5, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message7(bankOffer4, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 5.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 1500000 and totalValue <= 2000000:
        offerChoices = [45000, 45500, 45752, 45895, 46000, 46100, 46203, 46544, 46789, 47000, 47500, 47855, 48000,
                        48120, 48370, 48510, 48750, 49000, 49200, 49601, 50000]
        bankOffer4 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer4)
        decision4 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision4 == "deal" or decision4 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer4)
            exit()
        elif decision4 == "No Deal" or decision4 == "No deal" or decision4 == "no Deal" or decision4 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message8(round5, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message7(bankOffer4, totalValue)
    elif totalValue > 2000000 and totalValue <= 2500000:
        offerChoices = [35000, 35100, 36250, 36500, 36750, 37000, 37101, 37420, 37750, 38000, 38550, 38965, 38990,
                        39000, 39500, 41000, 41503, 41659, 42879, 42998, 43000, 43052, 43600, 44500, 44758, 45000]
        bankOffer4 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer4)
        decision4 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision4 == "deal" or decision4 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer4)
            exit()
        elif decision4 == "No Deal" or decision4 == "No deal" or decision4 == "no Deal" or decision4 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message8(round5, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message7(bankOffer4, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 5.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 2500000 and totalValue <= 3000000:
        offerChoices = [15000, 15100, 15150, 16000, 16500, 16684, 17789, 18000, 19123, 19150, 19605, 19909, 20400,
                        21540, 21750, 22000, 22135, 22560, 23000, 23750, 24120, 24325, 24500, 24780, 25000]
        bankOffer4 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer4)
        decision4 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision4 == "deal" or decision4 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer4)
            exit()
        elif decision4 == "No Deal" or decision4 == "No deal" or decision4 == "no Deal" or decision4 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message8(round5, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message7(bankOffer4, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 5.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    else:
        offerChoices = [10000, 11100, 11500, 12000, 12324, 12650, 12980, 13000, 13012, 13180, 13345, 13450, 13500,
                        13896, 13900, 14000, 14103, 14200, 14500, 14650, 14899, 15000]
        bankOffer4 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer4)
        decision4 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision4 == "deal" or decision4 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer4)
            exit()
        elif decision4 == "No Deal" or decision4 == "No deal" or decision4 == "no Deal" or decision4 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message8(round5, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
        # Deal leads to ending of game and accepting of bank offer.
        # No deal leads to the starting of round 5.
        # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
        message7(bankOffer4, totalValue)


# Another def message is started. It starts round 5, as the user entered no deal for all previous offers.
def message8(round5, totalValue, cases):
    # A for loop is given. It is intended to ask for 2 valid case inputs.
    for i in range(1, 3):
        # A boolean value is set.
        true = True
        ab = int(input("Please enter a case number: "))
        # The while loop is intended to make sure that the user enters 2 valid inputs which are in the [case] range. It repeatedly asks for valid input until it is entered.
        # Simultaneously, everytime a wrong input is entered, turtle draws a screen design saying "invalid input".
        while ab not in cases:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
            print("")
            print("These are the cases that are yet to be opened:", cases)
            ab = int(input("Please enter a case number: "))
        # Once a valid input/case number is entered, it is assigned a random money value with the case values range.
        abc = random.choice(caseValues)
        print("")
        print("You opened: $", abc)
        # The money revealed is added up.
        totalValue = abc + totalValue
        # Once the case and its value is shown to the user, they both are removed from their ranges.
        caseValues.remove(abc)
        cases.remove(ab)
        print("From the cases you have opened, this is the sum of money already revealed:", totalValue)
        print("These are the cases that are yet to be opened:", cases)
        print("")
    # After 2 valid cases are entered, the next message is executed.
    message9(bankOffer5, totalValue)


# Another def message is started to give a new bank offer based on the total value of the money revealed.
def message9(bankOffer5, totalValue):
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 6.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    if totalValue > 0 and totalValue <= 50000:
        offerChoices = [85000, 86002, 86254, 87953, 89953, 90010, 94635, 97229, 100000, 100422, 115605, 124500, 1250000,
                        127897, 128000, 130000, 135045, 140000, 146723]
        bankOffer5 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer5)
        decision5 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision5 == "deal" or decision5 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer5)
            exit()
        elif decision5 == "No Deal" or decision5 == "No deal" or decision5 == "no Deal" or decision5 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message10(round6, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message9(bankOffer5, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 6.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 50000 and totalValue <= 100000:
        offerChoices = [75000, 75502, 76254, 77809, 78000, 78100, 78265, 78564, 79210, 79050, 79500, 79862, 80000,
                        81000, 81526, 82400, 82645, 82954, 83000, 83250, 83466, 83889, 8400, 84500, 85000]
        bankOffer5 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer5)
        decision5 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision5 == "deal" or decision5 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer5)
            exit()
        elif decision5 == "No Deal" or decision5 == "No deal" or decision5 == "no Deal" or decision5 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message10(round6, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message9(bankOffer5, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 6.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 100000 and totalValue <= 300000:
        offerChoices = [70000, 70520, 71000, 71064, 71555, 71984, 72000, 72155, 72118, 72600, 73000, 73102, 73465,
                        73849, 74000, 74100, 74820, 74993, 75000]
        bankOffer5 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer5)
        decision5 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision5 == "deal" or decision5 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer5)
            exit()
        elif decision5 == "No Deal" or decision5 == "No deal" or decision5 == "no Deal" or decision5 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message10(round6, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message9(bankOffer5, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 6.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 300000 and totalValue <= 500000:
        offerChoices = [65000, 60321, 60500, 61200, 61289, 61500, 62150, 62480, 62987, 63000, 63010, 63100, 63560,
                        63975, 64005, 64230, 64550, 64982, 64660, 64980, 65000]
        bankOffer5 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer5)
        decision5 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision5 == "deal" or decision5 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer5)
            exit()
        elif decision5 == "No Deal" or decision5 == "No deal" or decision5 == "no Deal" or decision5 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message10(round6, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message9(bankOffer5, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 6.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 500000 and totalValue <= 750000:
        offerChoices = [60000, 60050, 60120, 61000, 61500, 61780, 61995, 62000, 62108, 62433, 62500, 62780, 62905,
                        63000, 63100, 63150, 63200, 63255, 63300, 63500, 63894, 64018, 64570, 64808, 65000]
        bankOffer5 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer5)
        decision5 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision5 == "deal" or decision5 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer5)
            exit()
        elif decision5 == "No Deal" or decision5 == "No deal" or decision5 == "no Deal" or decision5 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message10(round6, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message9(bankOffer5, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 6.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 750000 and totalValue <= 1000000:
        offerChoices = [55000, 55100, 55750, 55859, 56000, 56121, 56250, 56500, 56758, 57002, 57303, 57500, 57570,
                        57750, 58000, 58250, 58302, 58455, 58600, 58909, 59000, 59500, 59741, 60000]
        bankOffer5 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer5)
        decision5 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision5 == "deal" or decision5 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer5)
            exit()
        elif decision5 == "No Deal" or decision5 == "No deal" or decision5 == "no Deal" or decision5 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message10(round6, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message9(bankOffer5, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 6.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 1000000 and totalValue <= 1500000:
        offerChoices = [50000, 50500, 51075, 51500, 51750, 52000, 52160, 52480, 52700, 53000, 53101, 53265, 53458,
                        53750, 53981, 54000, 54001, 54100, 54567, 54983, 55000]
        bankOffer5 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer5)
        decision5 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision5 == "deal" or decision5 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer5)
            exit()
        elif decision5 == "No Deal" or decision5 == "No deal" or decision5 == "no Deal" or decision5 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message10(round6, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message9(bankOffer5, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 6.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 1500000 and totalValue <= 2000000:
        offerChoices = [45000, 45500, 45752, 45895, 46000, 46100, 46203, 46544, 46789, 47000, 47500, 47855, 48000,
                        48120, 48370, 48510, 48750, 49000, 49200, 49601, 50000]
        bankOffer5 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer5)
        decision5 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision5 == "deal" or decision5 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer5)
            exit()
        elif decision5 == "No Deal" or decision5 == "No deal" or decision5 == "no Deal" or decision5 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message10(round6, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message9(bankOffer5, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 6.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 2000000 and totalValue <= 2500000:
        offerChoices = [35000, 35100, 36250, 36500, 36750, 37000, 37101, 37420, 37750, 38000, 38550, 38965, 38990,
                        39000, 39500, 41000, 41503, 41659, 42879, 42998, 43000, 43052, 43600, 44500, 44758, 45000]
        bankOffer5 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer5)
        decision5 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision5 == "deal" or decision5 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer5)
            exit()
        elif decision5 == "No Deal" or decision5 == "No deal" or decision5 == "no Deal" or decision5 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message10(round6, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message9(bankOffer5, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 6.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 2500000 and totalValue <= 3000000:
        offerChoices = [15000, 15100, 15150, 16000, 16500, 16684, 17789, 18000, 19123, 19150, 19605, 19909, 20400,
                        21540, 21750, 22000, 22135, 22560, 23000, 23750, 24120, 24325, 24500, 24780, 25000]
        bankOffer5 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer5)
        decision5 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision5 == "deal" or decision5 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer5)
            exit()
        elif decision5 == "No Deal" or decision5 == "No deal" or decision5 == "no Deal" or decision5 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message10(round6, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message9(bankOffer5, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the starting of round 6.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    else:
        offerChoices = [10000, 11100, 11500, 12000, 12324, 12650, 12980, 13000, 13012, 13180, 13345, 13450, 13500,
                        13896, 13900, 14000, 14103, 14200, 14500, 14650, 14899, 15000]
        bankOffer5 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer5)
        decision5 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision5 == "deal" or decision5 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer5)
            exit()
        elif decision5 == "No Deal" or decision5 == "No deal" or decision5 == "no Deal" or decision5 == "no deal":
            print("You will be able to choose 2 more cases next round.")
            message10(round6, totalValue, cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
            # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
            # Deal leads to ending of game and accepting of bank offer.
            # No deal leads to the starting of round 6.
            # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
            message9(bankOffer5, totalValue)


# Another def function is started to start round 6 as previous bank offers weren't accepted.
def message10(round6, totalValue, cases):
    # A for loop is started. It requires 2 more valid case inputs.
    for i in range(2):
        # A boolean value is set.
        true = True
        ab = int(input("Please enter a case number: "))
        # A while loop is started to ensure that the user is asked for input until 2 cases in the given range are entered.
        # Simultaneously, turtle starts a screen design which displays "invalid input".
        while ab not in cases:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
            print("")
            print("These are the cases that are yet to be opened:", cases)
            ab = int(input("Please enter a case number: "))
        abc = random.choice(caseValues)
        # Once a valid case number is entered, it is assigned a value from the case values list.
        print("")
        print("You opened: $", abc)
        # The money revealed so far is added up.
        totalValue = abc + totalValue
        # Once the user is shown the case and its money value, both of them are remvoed from their ranges.
        caseValues.remove(abc)
        cases.remove(ab)
        print("From the cases you have opened, this is the sum of money already revealed:", totalValue)
        print("These are the cases that are yet to be opened:", cases)
        print("")
    # The next message is executed upon 2 successful inputs.
    message11(bankOffer6, totalValue)


# The last bank offer message is started using a def function. This is the last chance for the user to make a deal, otherwise he she has the option only to choose remaining case or venus case.
def message11(bankOffer6, totalValue):
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the picking of either venus case or remaining case.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    if totalValue > 0 and totalValue <= 50000:
        offerChoices = [85000, 86002, 86254, 87953, 89953, 90010, 94635, 97229, 100000, 100422, 115605, 124500, 1250000,
                        127897, 128000, 130000, 135045, 140000, 146723]
        bankOffer6 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer6)
        decision6 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision6 == "deal" or decision6 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer6)
            exit()
        elif decision6 == "No Deal" or decision6 == "No deal" or decision6 == "no Deal" or decision6 == "no deal":
            print(
                "You decided not to accept the deal, so now you can choose the remaining case or the Venus Case that was selected in the start.")
            message12(cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message11(bankOffer6, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the picking of either venus case or remaining case.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 50000 and totalValue <= 100000:
        offerChoices = [75000, 75502, 76254, 77809, 78000, 78100, 78265, 78564, 79210, 79050, 79500, 79862, 80000,
                        81000, 81526, 82400, 82645, 82954, 83000, 83250, 83466, 83889, 8400, 84500, 85000]
        bankOffer6 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer6)
        decision6 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision6 == "deal" or decision6 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer6)
            exit()
        elif decision6 == "No Deal" or decision6 == "No deal" or decision6 == "no Deal" or decision6 == "no deal":
            print(
                "You decided not to accept the deal, so now you can choose the remaining case or the Venus Case that was selected in the start.")
            message12(cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message11(bankOffer6, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the picking of either venus case or remaining case.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 100000 and totalValue <= 300000:
        offerChoices = [70000, 70520, 71000, 71064, 71555, 71984, 72000, 72155, 72118, 72600, 73000, 73102, 73465,
                        73849, 74000, 74100, 74820, 74993, 75000]
        bankOffer6 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer6)
        decision6 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision6 == "deal" or decision6 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer6)
            exit()
        elif decision6 == "No Deal" or decision6 == "No deal" or decision6 == "no Deal" or decision6 == "no deal":
            print(
                "You decided not to accept the deal, so now you can choose the remaining case or the Venus Case that was selected in the start.")
            message12(cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message11(bankOffer6, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the picking of either venus case or remaining case.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 300000 and totalValue <= 500000:
        offerChoices = [65000, 60321, 60500, 61200, 61289, 61500, 62150, 62480, 62987, 63000, 63010, 63100, 63560,
                        63975, 64005, 64230, 64550, 64982, 64660, 64980, 65000]
        bankOffer6 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer6)
        decision6 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision6 == "deal" or decision6 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer6)
            exit()
        elif decision6 == "No Deal" or decision6 == "No deal" or decision6 == "no Deal" or decision6 == "no deal":
            print(
                "You decided not to accept the deal, so now you can choose the remaining case or the Venus Case that was selected in the start.")
            message12(cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message11(bankOffer6, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the picking of either venus case or remaining case.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 500000 and totalValue <= 750000:
        offerChoices = [60000, 60050, 60120, 61000, 61500, 61780, 61995, 62000, 62108, 62433, 62500, 62780, 62905,
                        63000, 63100, 63150, 63200, 63255, 63300, 63500, 63894, 64018, 64570, 64808, 65000]
        bankOffer6 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer6)
        decision6 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision6 == "deal" or decision6 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer6)
            exit()
        elif decision6 == "No Deal" or decision6 == "No deal" or decision6 == "no Deal" or decision6 == "no deal":
            print(
                "You decided not to accept the deal, so now you can choose the remaining case or the Venus Case that was selected in the start.")
            message12(cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message11(bankOffer6, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the picking of either venus case or remaining case.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 750000 and totalValue <= 1000000:
        offerChoices = [55000, 55100, 55750, 55859, 56000, 56121, 56250, 56500, 56758, 57002, 57303, 57500, 57570,
                        57750, 58000, 58250, 58302, 58455, 58600, 58909, 59000, 59500, 59741, 60000]
        bankOffer6 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer6)
        decision6 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision6 == "deal" or decision6 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer6)
            exit()
        elif decision6 == "No Deal" or decision6 == "No deal" or decision6 == "no Deal" or decision6 == "no deal":
            print(
                "You decided not to accept the deal, so now you can choose the remaining case or the Venus Case that was selected in the start.")
            message12(cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message11(bankOffer6, totalValue)
    elif totalValue > 1000000 and totalValue <= 1500000:
        offerChoices = [50000, 50500, 51075, 51500, 51750, 52000, 52160, 52480, 52700, 53000, 53101, 53265, 53458,
                        53750, 53981, 54000, 54001, 54100, 54567, 54983, 55000]
        bankOffer6 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer6)
        decision6 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision6 == "deal" or decision6 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer6)
            exit()
        elif decision6 == "No Deal" or decision6 == "No deal" or decision6 == "no Deal" or decision6 == "no deal":
            print(
                "You decided not to accept the deal, so now you can choose the remaining case or the Venus Case that was selected in the start.")
            message12(cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message11(bankOffer6, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the picking of either venus case or remaining case.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 1500000 and totalValue <= 2000000:
        offerChoices = [45000, 45500, 45752, 45895, 46000, 46100, 46203, 46544, 46789, 47000, 47500, 47855, 48000,
                        48120, 48370, 48510, 48750, 49000, 49200, 49601, 50000]
        bankOffer6 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer6)
        decision6 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision6 == "deal" or decision6 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer6)
            exit()
        elif decision6 == "No Deal" or decision6 == "No deal" or decision6 == "no Deal" or decision6 == "no deal":
            print(
                "You decided not to accept the deal, so now you can choose the remaining case or the Venus Case that was selected in the start.")
            message12(cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message11(bankOffer6, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the picking of either venus case or remaining case.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 2000000 and totalValue <= 2500000:
        offerChoices = [35000, 35100, 36250, 36500, 36750, 37000, 37101, 37420, 37750, 38000, 38550, 38965, 38990,
                        39000, 39500, 41000, 41503, 41659, 42879, 42998, 43000, 43052, 43600, 44500, 44758, 45000]
        bankOffer6 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer6)
        decision6 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision6 == "deal" or decision6 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer6)
            exit()
        elif decision6 == "No Deal" or decision6 == "No deal" or decision6 == "no Deal" or decision6 == "no deal":
            print(
                "You decided not to accept the deal, so now you can choose the remaining case or the Venus Case that was selected in the start.")
            message12(cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message11(bankOffer6, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the picking of either venus case or remaining case.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    elif totalValue > 2500000 and totalValue <= 3000000:
        offerChoices = [15000, 15100, 15150, 16000, 16500, 16684, 17789, 18000, 19123, 19150, 19605, 19909, 20400,
                        21540, 21750, 22000, 22135, 22560, 23000, 23750, 24120, 24325, 24500, 24780, 25000]
        bankOffer6 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer6)
        decision6 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision6 == "deal" or decision6 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer6)
            exit()
        elif decision6 == "No Deal" or decision6 == "No deal" or decision6 == "no Deal" or decision6 == "no deal":
            print(
                "You decided not to accept the deal, so now you can choose the remaining case or the Venus Case that was selected in the start.")
            message12(cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        message11(bankOffer6, totalValue)
    # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
    # Deal leads to ending of game and accepting of bank offer.
    # No deal leads to the picking of either venus case or remaining case.
    # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
    else:
        offerChoices = [10000, 11100, 11500, 12000, 12324, 12650, 12980, 13000, 13012, 13180, 13345, 13450, 13500,
                        13896, 13900, 14000, 14103, 14200, 14500, 14650, 14899, 15000]
        bankOffer6 = random.choice(offerChoices)
        print("The bank offer is: $", bankOffer6)
        decision6 = str(input("Do you want to make a deal or no deal? Enter \"Deal\" or \"No Deal\": "))
        if decision6 == "deal" or decision6 == "Deal":
            caseValues.insert(2, venusCaseMoney)
            print("The money in Venus case was: $", venusCaseMoney)
            print("BUT YOU HAVE WON: $", bankOffer6)
            exit()
        elif decision6 == "No Deal" or decision6 == "No deal" or decision6 == "no Deal" or decision6 == "no deal":
            print(
                "You decided not to accept the deal, so now you can choose the remaining case or the Venus Case that was selected in the start.")
            message12(cases)
        else:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
        # Onwards, the users are entered for the same inputs, either deal or no deal after being given an offer. This time the range is different, which is based on the variation of totalValue.
        # Deal leads to ending of game and accepting of bank offer.
        # No deal leads to the picking of either venus case or remaining case.
        # An invalid leads to a screen display and the repetitive asking of valid input by repetition of message.
        message11(bankOffer6, totalValue)


# The last def function is started. It is basically the final round. The user can now only choose the remaining case or choose the Venus case.
def message12(cases):
    # Since the venus case and its assigned value were removed upon being selected by user in the start, they are now added back into the range if the user wants to pick the Venus case.
    cases.insert(2, venusCase)
    caseValues.insert(2, venusCaseMoney)
    # The for loop is started. It requires only one successful case input.
    for i in range(1):
        # A boolean value is set.
        true = True
        ab = int(input("Please enter a case number: "))
        # A while loop is started to ensure that the user enters the venus case or the remaining case in the range. It continuously asks for input until it is valid.
        # For every invalid input, turtle also draws a screen design saying "invalid input".
        while ab not in cases:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
            print("")
            print("These are the cases that are yet to be opened:", cases)
            ab = int(input("Please enter a case number: "))
        # Once a valid case is entered, an if statement is used to determine what case was picked, and how much money was won.
        if ab == venusCase:
            # If the user chooses the venus case, the amount of money its assigned is revealed to the user.
            print("The amount of money you have won is: $", venusCaseMoney)
            # After outputting that to the user, the venus case and that amount of money are removed from their ranges.
            cases.remove(venusCase)
            caseValues.remove(venusCaseMoney)
            # The remaining case is assigned the remaining value of money.
            abc = random.choice(caseValues)
            # The user is shown how much he/she won from the Venus case, and how much was in the remaining case/
            print("The amount of money in the remaining case was: $", abc)
        else:
            # If the user did not pick the Venus case, the amount of it is firstly revealed.
            print("The amount of money in the Venus case was: $", venusCaseMoney)
            # Then the venus case and its money value are removed from their ranges.
            cases.remove(venusCase)
            caseValues.remove(venusCaseMoney)
            # The remaining case is assigned the remaining money value.
            abc = random.choice(caseValues)
            # The user is shown how much they've earned, and the value of the venus case.
            print("BUT YOU HAVE WON: $", abc)
        # The game ends here (exits).
        exit()


# The main def function is started. It uses the case range.
def main(cases):
    totalValue = 0
    # Due to the for loop it will run until the user enters 7 valid case inputs.
    for i in range(1, 8):
        # Boolean value is set.
        true = True
        # A valid case number will be asked for.
        ab = int(input("Please enter a case number: "))
        # A while loop will run until the case value is valid. Simultanously, turtle will show "invalid input." until a valid value is entered.
        while ab not in cases:
            print("You did not enter anything valid.")
            t.speed(0)
            canvas = turtle.Screen()
            canvas.bgcolor("yellow")
            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(600)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("orange")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(550)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-500, 300)
            t.pendown()
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.forward(1000)
            t.right(90)
            t.forward(300)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("gold")
            t.penup()
            t.setpos(-475, 275)
            t.pendown()
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.forward(950)
            t.right(90)
            t.forward(250)
            t.right(90)
            t.end_fill()

            t.begin_fill()
            t.color("black")
            t.penup()
            t.setpos(-450, -25)
            t.pendown()
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.forward(900)
            t.right(90)
            t.forward(225)
            t.right(90)
            t.end_fill()

            t.penup()
            t.setpos(-350, 45)
            t.color("black")
            t.pendown()
            t.write("INVALID", font=('Britannic Bold', 150))

            t.penup()
            t.setpos(-275, -250)
            t.color("gold")
            t.pendown()
            t.write("INPUT.", font=('Britannic Bold', 150))
            time.sleep(2)
            t.reset()
            print("")
            print("These are the cases that are yet to be opened:", cases)
            ab = int(input("Please enter a case number: "))
        # Once a valid case number is entered, it will be assigned a random money value.
        abc = random.choice(caseValues)
        print("")
        print("You opened: $", abc)
        # The money value and that case will be removed from the ranges. The amount of money revealed so far will be added up as cases are picked.
        totalValue = abc + totalValue
        caseValues.remove(abc)
        cases.remove(ab)
        print("From the cases you have opened, this is the sum of money already revealed:", totalValue)
        print("These are the cases that are yet to be opened:", cases)
        print("")
    # After getting 7 cases, the main function will call the following message:
    message1(bankOffer1, totalValue)


main(cases)
